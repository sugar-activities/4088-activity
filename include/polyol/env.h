/* env.h generated by valac 0.10.1, the Vala compiler, do not modify */


#ifndef __POLYOL_ENV_H__
#define __POLYOL_ENV_H__

#include <glib.h>
#include <float.h>
#include <math.h>
#include <stdlib.h>
#include <string.h>
#include <glib-object.h>
#include <X11/Xlib.h>
#include <X11/Xatom.h>
#include <X11/Xutil.h>
#include <X11/Xregion.h>

G_BEGIN_DECLS


#define SUGAR_TYPE_COLOR (sugar_color_get_type ())
typedef struct _SugarColor SugarColor;

#define SUGAR_TYPE_XO_COLOR (sugar_xo_color_get_type ())
typedef struct _SugarXoColor SugarXoColor;

#define SUGAR_TYPE_FONT (sugar_font_get_type ())
typedef struct _SugarFont SugarFont;

#define SUGAR_TYPE_METRICS (sugar_metrics_get_type ())
typedef struct _SugarMetrics SugarMetrics;

#define SUGAR_TYPE_PROFILE (sugar_profile_get_type ())
#define SUGAR_PROFILE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SUGAR_TYPE_PROFILE, SugarProfile))
#define SUGAR_PROFILE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SUGAR_TYPE_PROFILE, SugarProfileClass))
#define SUGAR_IS_PROFILE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SUGAR_TYPE_PROFILE))
#define SUGAR_IS_PROFILE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SUGAR_TYPE_PROFILE))
#define SUGAR_PROFILE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SUGAR_TYPE_PROFILE, SugarProfileClass))

typedef struct _SugarProfile SugarProfile;
typedef struct _SugarProfileClass SugarProfileClass;
typedef struct _SugarProfilePrivate SugarProfilePrivate;

#define SUGAR_TYPE_SHARE_SCOPE (sugar_share_scope_get_type ())

#define SUGAR_TYPE_LRU (sugar_lru_get_type ())
#define SUGAR_LRU(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SUGAR_TYPE_LRU, SugarLRU))
#define SUGAR_LRU_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SUGAR_TYPE_LRU, SugarLRUClass))
#define SUGAR_IS_LRU(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SUGAR_TYPE_LRU))
#define SUGAR_IS_LRU_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SUGAR_TYPE_LRU))
#define SUGAR_LRU_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SUGAR_TYPE_LRU, SugarLRUClass))

typedef struct _SugarLRU SugarLRU;
typedef struct _SugarLRUClass SugarLRUClass;
typedef struct _SugarLRUPrivate SugarLRUPrivate;

#define SUGAR_TYPE_ACTIVITY_INFO (sugar_activity_info_get_type ())
typedef struct _SugarActivityInfo SugarActivityInfo;

#define SUGAR_TYPE_ENVIRON (sugar_environ_get_type ())
#define SUGAR_ENVIRON(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SUGAR_TYPE_ENVIRON, SugarEnviron))
#define SUGAR_ENVIRON_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SUGAR_TYPE_ENVIRON, SugarEnvironClass))
#define SUGAR_IS_ENVIRON(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SUGAR_TYPE_ENVIRON))
#define SUGAR_IS_ENVIRON_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SUGAR_TYPE_ENVIRON))
#define SUGAR_ENVIRON_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SUGAR_TYPE_ENVIRON, SugarEnvironClass))

typedef struct _SugarEnviron SugarEnviron;
typedef struct _SugarEnvironClass SugarEnvironClass;
typedef struct _SugarEnvironPrivate SugarEnvironPrivate;

struct _SugarColor {
	double alpha;
	guint16 red;
	guint16 green;
	guint16 blue;
};

struct _SugarXoColor {
	SugarColor stroke;
	SugarColor fill;
};

struct _SugarFont {
	char* _format;
};

struct _SugarMetrics {
	gboolean scaled;
	double value;
};

struct _SugarProfile {
	GTypeInstance parent_instance;
	volatile int ref_count;
	SugarProfilePrivate * priv;
};

struct _SugarProfileClass {
	GTypeClass parent_class;
	void (*finalize) (SugarProfile *self);
};

typedef enum  {
	SUGAR_SHARE_SCOPE_PRIVATE,
	SUGAR_SHARE_SCOPE_INVITE_ONLY,
	SUGAR_SHARE_SCOPE_PUBLIC,
	SUGAR_SHARE_SCOPE_LAST
} SugarShareScope;

struct _SugarLRU {
	GTypeInstance parent_instance;
	volatile int ref_count;
	SugarLRUPrivate * priv;
};

struct _SugarLRUClass {
	GTypeClass parent_class;
	void (*finalize) (SugarLRU *self);
};

struct _SugarActivityInfo {
	char* bundle_id;
	char* icon;
	char* name;
};

struct _SugarEnviron {
	GTypeInstance parent_instance;
	volatile int ref_count;
	SugarEnvironPrivate * priv;
};

struct _SugarEnvironClass {
	GTypeClass parent_class;
	void (*finalize) (SugarEnviron *self);
};


GType sugar_color_get_type (void) G_GNUC_CONST;
SugarColor* sugar_color_dup (const SugarColor* self);
void sugar_color_free (SugarColor* self);
#define SUGAR_COLOR_BLACK 0
#define SUGAR_COLOR_WHITE 1
#define SUGAR_COLOR_TRANSPARENT 2
#define SUGAR_COLOR_PANEL_GREY 3
#define SUGAR_COLOR_SELECTION_GREY 4
#define SUGAR_COLOR_TOOLBAR_GREY 5
#define SUGAR_COLOR_BUTTON_GREY 6
#define SUGAR_COLOR_INACTIVE_FILL 7
#define SUGAR_COLOR_INACTIVE_STROKE 8
#define SUGAR_COLOR_TEXT_FIELD_GREY 9
#define SUGAR_COLOR_HIGHLIGHT 10
#define SUGAR_COLOR_LAST 11
void sugar_color_get (gint type, SugarColor* result);
char* sugar_color_to_string (SugarColor *self);
SugarColor* sugar_color_from_string (const char* color_string);
guint32 sugar_color_get_integer (SugarColor* self);
char* sugar_color_get_html (SugarColor* self);
char* sugar_color_get_svg (SugarColor* self);
GType sugar_xo_color_get_type (void) G_GNUC_CONST;
SugarXoColor* sugar_xo_color_dup (const SugarXoColor* self);
void sugar_xo_color_free (SugarXoColor* self);
char* sugar_xo_color_to_string (SugarXoColor *self);
SugarXoColor* sugar_xo_color_from_string (const char* color_string);
GType sugar_font_get_type (void) G_GNUC_CONST;
SugarFont* sugar_font_dup (const SugarFont* self);
void sugar_font_free (SugarFont* self);
void sugar_font_copy (const SugarFont* self, SugarFont* dest);
void sugar_font_destroy (SugarFont* self);
#define SUGAR_FONT_NORMAL 0
#define SUGAR_FONT_BOLD 1
#define SUGAR_FONT_LAST 2
void sugar_font_get (gint type, SugarFont* result);
char* sugar_font_get_name (SugarFont* self);
double sugar_font_get_size (SugarFont* self);
char* sugar_font_get_face (SugarFont* self);
GType sugar_metrics_get_type (void) G_GNUC_CONST;
SugarMetrics* sugar_metrics_dup (const SugarMetrics* self);
void sugar_metrics_free (SugarMetrics* self);
extern double sugar_metrics__zoom_factor;
#define SUGAR_FOCUS_LINE_WIDTH 0
#define SUGAR_TOOLBAR_ARROW_SIZE 1
#define SUGAR_ZOOM_FACTOR 2
#define SUGAR_DEFAULT_SPACING 3
#define SUGAR_DEFAULT_PADDING 4
#define SUGAR_GRID_CELL_SIZE 5
#define SUGAR_LINE_WIDTH 6
#define SUGAR_STANDARD_ICON_SIZE 7
#define SUGAR_SMALL_ICON_SIZE 8
#define SUGAR_MEDIUM_ICON_SIZE 9
#define SUGAR_LARGE_ICON_SIZE 10
#define SUGAR_XLARGE_ICON_SIZE 11
#define SUGAR_TOOLBOX_SEPARATOR_HEIGHT 12
#define SUGAR_TOOLBOX_HORIZONTAL_PADDING 13
#define SUGAR_TOOLBOX_TAB_VBORDER 14
#define SUGAR_TOOLBOX_TAB_HBORDER 15
#define SUGAR_TOOLBOX_TAB_LABEL_WIDTH 16
#define SUGAR_PALETTE_CURSOR_DISTANCE 17
#define SUGAR_FONT_NORMAL_H 18
#define SUGAR_FONT_BOLD_H 19
#define SUGAR_METRICS_LAST 20
gint sugar_metrics_zoom (double units);
gint sugar_metrics_get (gint type);
double sugar_metrics_get_factor (void);
gpointer sugar_profile_ref (gpointer instance);
void sugar_profile_unref (gpointer instance);
GParamSpec* sugar_param_spec_profile (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void sugar_value_set_profile (GValue* value, gpointer v_object);
void sugar_value_take_profile (GValue* value, gpointer v_object);
gpointer sugar_value_get_profile (const GValue* value);
GType sugar_profile_get_type (void) G_GNUC_CONST;
const char* sugar_profile_get_name (void);
char* sugar_profile_get_path (void);
void sugar_profile_get_color (SugarXoColor* result);
char* sugar_profile_get_nickname (void);
GType sugar_share_scope_get_type (void) G_GNUC_CONST;
gpointer sugar_lru_ref (gpointer instance);
void sugar_lru_unref (gpointer instance);
GParamSpec* sugar_param_spec_lru (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void sugar_value_set_lru (GValue* value, gpointer v_object);
void sugar_value_take_lru (GValue* value, gpointer v_object);
gpointer sugar_value_get_lru (const GValue* value);
GType sugar_lru_get_type (void) G_GNUC_CONST;
SugarLRU* sugar_lru_new (GType k_type, GBoxedCopyFunc k_dup_func, GDestroyNotify k_destroy_func, GType v_type, GBoxedCopyFunc v_dup_func, GDestroyNotify v_destroy_func, gint capacity, GHashFunc key_hash_func, GEqualFunc key_equal_func);
SugarLRU* sugar_lru_construct (GType object_type, GType k_type, GBoxedCopyFunc k_dup_func, GDestroyNotify k_destroy_func, GType v_type, GBoxedCopyFunc v_dup_func, GDestroyNotify v_destroy_func, gint capacity, GHashFunc key_hash_func, GEqualFunc key_equal_func);
gboolean sugar_lru_has_key (SugarLRU* self, gconstpointer key);
gpointer sugar_lru_get (SugarLRU* self, gconstpointer key);
void sugar_lru_set (SugarLRU* self, gconstpointer key, gconstpointer value);
void sugar_lru_remove (SugarLRU* self, gconstpointer key);
gint sugar_lru_get_capacity (SugarLRU* self);
GType sugar_activity_info_get_type (void) G_GNUC_CONST;
SugarActivityInfo* sugar_activity_info_dup (const SugarActivityInfo* self);
void sugar_activity_info_free (SugarActivityInfo* self);
void sugar_activity_info_copy (const SugarActivityInfo* self, SugarActivityInfo* dest);
void sugar_activity_info_destroy (SugarActivityInfo* self);
gboolean sugar_activity_info_get (const char* path, SugarActivityInfo* _result_);
gpointer sugar_environ_ref (gpointer instance);
void sugar_environ_unref (gpointer instance);
GParamSpec* sugar_param_spec_environ (const gchar* name, const gchar* nick, const gchar* blurb, GType object_type, GParamFlags flags);
void sugar_value_set_environ (GValue* value, gpointer v_object);
void sugar_value_take_environ (GValue* value, gpointer v_object);
gpointer sugar_value_get_environ (const GValue* value);
GType sugar_environ_get_type (void) G_GNUC_CONST;
#define SUGAR_ENVIRON_ROOT_DIRECTORY ".sugar"
#define SUGAR_ENVIRON_PREVIEW_WIDTH 300
#define SUGAR_ENVIRON_PREVIEW_HEIGHT 225
gboolean sugar_init (char*** argv, int* argv_length1);
void sugar_environ_set_window (Display* display, Window window);
gboolean sugar_environ_get_initialized (void);
const char* sugar_environ_get_activity_id (void);
const char* sugar_environ_get_bundle_id (void);
const char* sugar_environ_get_object_id (void);
void sugar_environ_get_activity (SugarActivityInfo* result);
const char* sugar_environ_get_activity_root (void);
XID sugar_environ_get_window (void);
gboolean sugar_environ_get_secure_mode (void);
gboolean sugar_environ_get_sync_dbus (void);
void sugar_environ_set_sync_dbus (gboolean value);
#define SUGAR_MIME_TEXT "Text"
#define SUGAR_MIME_IMAGE "Image"
#define SUGAR_MIME_AUDIO "Audio"
#define SUGAR_MIME_VIDEO "Video"
#define SUGAR_MIME_LINK "Link"


G_END_DECLS

#endif
